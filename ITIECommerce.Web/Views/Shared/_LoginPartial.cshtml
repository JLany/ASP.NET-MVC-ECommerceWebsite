@using ITIECommerce.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ITIECommerceUser> SignInManager
@inject UserManager<ITIECommerceUser> UserManager
@inject ITIECommerceDbContext DbContext
@* @inject IRepository<ITIECommerceUser> Repository *@

@{
    var userId = UserManager.GetUserId(User);
    @* var name = await Repository.GetAsync(userId)?.FirstName; *@
    var FullName = DbContext.Users
                .FirstOrDefault(u => u.Id == userId)?.FullName;

}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-action="Manage" asp-controller="Accounts" title="Manage">Hello @(FullName ?? User.Identity?.Name)!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-action="Logout" asp-controller="Accounts">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-action="Register" asp-controller="Accounts">Register</a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-dark" asp-action="Login" asp-controller="Accounts">Login</a>
        </li>
    }
</ul>
